version: 2
jobs:
  lint:
    docker:
    - image: circleci/node:lts
    steps:
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] lint";
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] reviewdogでコミットに書き込みたい";
  run_test_light:
    docker:
    - image: circleci/node:lts
    steps:
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] 並列 UnitTest Light";
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] テストレポート(分散状態)とカバレッジレポート(分散状態)";
  upseart_pullrequest:
    docker:
    - image: circleci/node:lts
    steps:
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] プルリクエスト";
  run_test:
    docker:
    - image: circleci/node:lts
    steps:
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] 並列 Test";
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] テストレポート(分散状態)とカバレッジレポート(分散状態)";
  merge_coverage_light:
    docker:
    - image: circleci/node:lts
    steps:
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] 分散したカバレッジのマージ(Light版)";
  merge_coverage:
    docker:
    - image: circleci/node:lts
    steps:
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] 分散したカバレッジのマージ";
  build_something:
    docker:
    - image: circleci/node:lts
    steps:
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] 何かをビルド";
  deploy:
    docker:
    - image: circleci/node:lts
    steps:
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] デプロイ";
workflows:
  build:
    jobs:
    - lint:
        filters:
          branches:
            only: /feature\/.*/
    - run_test_light:
        filters:
          branches:
            only: /feature\/.*/
        requires:
        - lint
    - upseart_pullrequest:
        filters:
          branches:
            only: /feature\/.*/
        requires:
        - lint
        - run_test_light
    - run_test:
        filters:
          branches:
            only:
            - develop
            - staging
            - master
    - merge_coverage_light:
        filters:
          branches:
            only: /feature\/.*/
        requires:
        - run_test_light
    - merge_coverage:
        filters:
          branches:
            only:
            - develop
            - staging
            - master
        requires:
        - run_test
    - build_something:
        filters:
          branches:
            only:
            - develop
            - staging
            - master
        requires:
        - run_test
    - deploy:
        filters:
          branches:
            only:
            - develop
            - staging
            - master
        requires:
        - run_test
        - merge_coverage
        - build_something
  version: 2

# Original config.yml file:
# ---
# version: 2.1
# 
# executors:
#   node:
#     parameters:
#       tag:
#         type: string
#         default: \"lts\"
#     docker:
#       - image: circleci/node:<< parameters.tag >>
# 
# commands:
#   echo-hello:
#     description: \"CircleCI\u306E\u7D50\u679C\u306B\u51FA\u529B\"
#     parameters:
#       message:
#         type: string
#         default: \"Hello World\"
#     steps:
#       - run:
#           name: \"echo\"
#           command: echo \"<< parameters.message >>\";
#   notify-discord:
#     description: \"Discord\u3078\u901A\u77E5\u3059\u308B\"
#     parameters:
#       webhook:
#         type: string
#         default: ${DISCORD_WEBHOOK}
#       message:
#         type: string
#         default: \"[${CIRCLE_BRANCH}] \u3053\u3093\u306B\u3061\u306F\u4E16\u754C\"
#       timeout:
#         type: integer
#         default: 5
#     steps:
#       - run:
#           name: \"Discord\u3078\u901A\u77E5\"
#           command: |
#             curl -X POST -H \"Content-Type:application/json\" -d \"{\\\"content\\\": \\\"<< parameters.message >>\\\"}\" --connect-timeout << parameters.timeout >> << parameters.webhook >>
# 
# jobs:
#   lint:
#     executor: node
#     steps:
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] lint\"
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] reviewdog\u3067\u30B3\u30DF\u30C3\u30C8\u306B\u66F8\u304D\u8FBC\u307F\u305F\u3044\"
#   run_test_light:
#     executor: node
#     steps:
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u4E26\u5217 UnitTest Light\"
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u30C6\u30B9\u30C8\u30EC\u30DD\u30FC\u30C8(\u5206\u6563\u72B6\u614B)\u3068\u30AB\u30D0\u30EC\u30C3\u30B8\u30EC\u30DD\u30FC\u30C8(\u5206\u6563\u72B6\u614B)\"
#   run_test:
#     executor: node
#     steps:
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u4E26\u5217 Test\"
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u30C6\u30B9\u30C8\u30EC\u30DD\u30FC\u30C8(\u5206\u6563\u72B6\u614B)\u3068\u30AB\u30D0\u30EC\u30C3\u30B8\u30EC\u30DD\u30FC\u30C8(\u5206\u6563\u72B6\u614B)\"
#   merge_coverage_light:
#     executor: node
#     steps:
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u5206\u6563\u3057\u305F\u30AB\u30D0\u30EC\u30C3\u30B8\u306E\u30DE\u30FC\u30B8(Light\u7248)\"
#   merge_coverage:
#     executor: node
#     steps:
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u5206\u6563\u3057\u305F\u30AB\u30D0\u30EC\u30C3\u30B8\u306E\u30DE\u30FC\u30B8\"
#   build_something:
#     executor: node
#     steps:
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u4F55\u304B\u3092\u30D3\u30EB\u30C9\"
#   upseart_pullrequest:
#     executor: node
#     steps:
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u30D7\u30EB\u30EA\u30AF\u30A8\u30B9\u30C8\"
#   deploy:
#     executor: node
#     steps:
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u30C7\u30D7\u30ED\u30A4\"
# 
# workflows:
#   build:
#     jobs:
#       - lint:
#           filters:
#             branches:
#               only: /feature\\/.*/
#       - run_test_light:
#           filters:
#             branches:
#               only: /feature\\/.*/
#           requires:
#             - lint
#       - upseart_pullrequest:
#           filters:
#             branches:
#               only: /feature\\/.*/
#           requires:
#             - lint
#             - run_test_light
#       - run_test:
#           filters:
#             branches:
#               only:
#                 - develop
#                 - staging
#                 - master
#       - merge_coverage_light:
#           filters:
#             branches:
#               only: /feature\\/.*/
#           requires:
#             - run_test_light
#       - merge_coverage:
#           filters:
#             branches:
#               only:
#                 - develop
#                 - staging
#                 - master
#           requires:
#             - run_test
#       - build_something:
#           filters:
#             branches:
#               only:
#                 - develop
#                 - staging
#                 - master
#           requires:
#             - run_test
#       - deploy:
#           filters:
#             branches:
#               only:
#                 - develop
#                 - staging
#                 - master
#           requires:
#             - run_test
#             - merge_coverage
#             - build_something