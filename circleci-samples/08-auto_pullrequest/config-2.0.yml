version: 2
jobs:
  lint:
    docker:
    - image: circleci/node:lts
    steps:
    - checkout
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] lint";
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] reviewdogでコミットに書き込みたい";
  run_test_light:
    docker:
    - image: circleci/node:lts
    steps:
    - checkout
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] 並列 UnitTest Light";
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] テストレポート(分散状態)とカバレッジレポート(分散状態)";
  upseart_pullrequest:
    docker:
    - image: circleci/node:lts
    steps:
    - checkout
    - run:
        name: hubコマンドがなければインストール
        command: |
          type hub || \
          (curl -sSLf https://github.com/github/hub/releases/download/v2.11.1/hub-linux-amd64-2.11.1.tgz | \
            tar zxf - --strip-components=1 -C /tmp && \
            sudo mv /tmp/bin/hub /usr/local/bin/hub)
    - run:
        name: $CIRCLE_BRANCHブランチをdevelopブランチへpull request
        command: |
          hub pr list -h "$CIRCLE_BRANCH" -b "develop" > /tmp/pullreq && \
          if [ -s /tmp/pullreq ]; then
            echo "既にpull request済みです"
            cat /tmp/pullreq
          else
            hub pull-request --no-edit -h "$CIRCLE_BRANCH" -b "develop" -F ".github/PULL_REQUEST_TEMPLATE.md"
            echo "pull requestしました"
          fi
    - run:
        name: $CIRCLE_BRANCHブランチをstagingブランチへpull request
        command: |
          hub pr list -h "$CIRCLE_BRANCH" -b "staging" > /tmp/pullreq && \
          if [ -s /tmp/pullreq ]; then
            echo "既にpull request済みです"
            cat /tmp/pullreq
          else
            hub pull-request --no-edit -h "$CIRCLE_BRANCH" -b "staging" -F ".github/PULL_REQUEST_TEMPLATE.md"
            echo "pull requestしました"
          fi
    - run:
        name: $CIRCLE_BRANCHブランチをmasterブランチへpull request
        command: |
          hub pr list -h "$CIRCLE_BRANCH" -b "master" > /tmp/pullreq && \
          if [ -s /tmp/pullreq ]; then
            echo "既にpull request済みです"
            cat /tmp/pullreq
          else
            hub pull-request --no-edit -h "$CIRCLE_BRANCH" -b "master" -F ".github/PULL_REQUEST_TEMPLATE.md"
            echo "pull requestしました"
          fi
  run_test:
    docker:
    - image: circleci/node:lts
    steps:
    - checkout
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] 並列 Test";
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] テストレポート(分散状態)とカバレッジレポート(分散状態)";
  merge_coverage_light:
    docker:
    - image: circleci/node:lts
    steps:
    - checkout
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] 分散したカバレッジのマージ(Light版)";
  merge_coverage:
    docker:
    - image: circleci/node:lts
    steps:
    - checkout
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] 分散したカバレッジのマージ";
  build_something:
    docker:
    - image: circleci/node:lts
    steps:
    - checkout
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] 何かをビルド";
  deploy:
    docker:
    - image: circleci/node:lts
    steps:
    - run:
        name: echo
        command: echo "[$CIRCLE_BRANCH] デプロイ";
workflows:
  build:
    jobs:
    - lint:
        filters:
          branches:
            only: /feature\/.*/
    - run_test_light:
        filters:
          branches:
            only: /feature\/.*/
        requires:
        - lint
    - upseart_pullrequest:
        filters:
          branches:
            only: /feature\/.*/
        requires:
        - lint
        - run_test_light
    - run_test:
        filters:
          branches:
            only:
            - develop
            - staging
            - master
    - merge_coverage_light:
        filters:
          branches:
            only: /feature\/.*/
        requires:
        - run_test_light
    - merge_coverage:
        filters:
          branches:
            only:
            - develop
            - staging
            - master
        requires:
        - run_test
    - build_something:
        filters:
          branches:
            only:
            - develop
            - staging
            - master
        requires:
        - run_test
    - deploy:
        filters:
          branches:
            only:
            - develop
            - staging
            - master
        requires:
        - run_test
        - merge_coverage
        - build_something
  version: 2

# Original config.yml file:
# ---
# version: 2.1
# 
# executors:
#   node:
#     parameters:
#       tag:
#         type: string
#         default: \"lts\"
#     docker:
#       - image: circleci/node:<< parameters.tag >>
# 
# commands:
#   echo-hello:
#     description: \"CircleCI\u306E\u7D50\u679C\u306B\u51FA\u529B\"
#     parameters:
#       message:
#         type: string
#         default: \"Hello World\"
#     steps:
#       - run:
#           name: \"echo\"
#           command: echo \"<< parameters.message >>\";
#   notify-discord:
#     description: \"Discord\u3078\u901A\u77E5\u3059\u308B\"
#     parameters:
#       webhook:
#         type: string
#         default: ${DISCORD_WEBHOOK}
#       message:
#         type: string
#         default: \"[${CIRCLE_BRANCH}] \u3053\u3093\u306B\u3061\u306F\u4E16\u754C\"
#       timeout:
#         type: integer
#         default: 5
#     steps:
#       - run:
#           name: \"Discord\u3078\u901A\u77E5\"
#           command: |
#             curl -X POST -H \"Content-Type:application/json\" -d \"{\\\"content\\\": \\\"<< parameters.message >>\\\"}\" --connect-timeout << parameters.timeout >> << parameters.webhook >>
#   install_hub:
#     description: \"hub\u30B3\u30DE\u30F3\u30C9\u304C\u306A\u3051\u308C\u3070\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\"
#     parameters:
#       version:
#         type: string
#         default: \"2.11.1\"
#     steps:
#       - run:
#           name: \"hub\u30B3\u30DE\u30F3\u30C9\u304C\u306A\u3051\u308C\u3070\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\"
#           command: |
#             type hub || \\
#             (curl -sSLf https://github.com/github/hub/releases/download/v<< parameters.version >>/hub-linux-amd64-<< parameters.version >>.tgz | \\
#               tar zxf - --strip-components=1 -C /tmp && \\
#               sudo mv /tmp/bin/hub /usr/local/bin/hub)
#   upseart_pullrequest:
#     description: \"hub\u30B3\u30DE\u30F3\u30C9\u3092\u5229\u7528\u3057\u3066\u3057\u3066\u3055\u308C\u305F\u30D6\u30E9\u30F3\u30C1\u3078pull request\"
#     parameters:
#       from:
#         type: string
#       to:
#         type: string
#         default: \"master\"
#       template:
#         type: string
#         default: \".github/PULL_REQUEST_TEMPLATE.md\"
#     steps:
#       - run:
#           name: \"<< parameters.from >>\u30D6\u30E9\u30F3\u30C1\u3092<< parameters.to >>\u30D6\u30E9\u30F3\u30C1\u3078pull request\"
#           command: |
#             hub pr list -h \"<< parameters.from >>\" -b \"<< parameters.to >>\" > /tmp/pullreq && \\
#             if [ -s /tmp/pullreq ]; then
#               echo \"\u65E2\u306Bpull request\u6E08\u307F\u3067\u3059\"
#               cat /tmp/pullreq
#             else
#               hub pull-request --no-edit -h \"<< parameters.from >>\" -b \"<< parameters.to >>\" -F \"<< parameters.template >>\"
#               echo \"pull request\u3057\u307E\u3057\u305F\"
#             fi
# 
# jobs:
#   lint:
#     executor: node
#     steps:
#       - checkout
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] lint\"
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] reviewdog\u3067\u30B3\u30DF\u30C3\u30C8\u306B\u66F8\u304D\u8FBC\u307F\u305F\u3044\"
#   run_test_light:
#     executor: node
#     steps:
#       - checkout
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u4E26\u5217 UnitTest Light\"
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u30C6\u30B9\u30C8\u30EC\u30DD\u30FC\u30C8(\u5206\u6563\u72B6\u614B)\u3068\u30AB\u30D0\u30EC\u30C3\u30B8\u30EC\u30DD\u30FC\u30C8(\u5206\u6563\u72B6\u614B)\"
#   run_test:
#     executor: node
#     steps:
#       - checkout
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u4E26\u5217 Test\"
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u30C6\u30B9\u30C8\u30EC\u30DD\u30FC\u30C8(\u5206\u6563\u72B6\u614B)\u3068\u30AB\u30D0\u30EC\u30C3\u30B8\u30EC\u30DD\u30FC\u30C8(\u5206\u6563\u72B6\u614B)\"
#   merge_coverage_light:
#     executor: node
#     steps:
#       - checkout
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u5206\u6563\u3057\u305F\u30AB\u30D0\u30EC\u30C3\u30B8\u306E\u30DE\u30FC\u30B8(Light\u7248)\"
#   merge_coverage:
#     executor: node
#     steps:
#       - checkout
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u5206\u6563\u3057\u305F\u30AB\u30D0\u30EC\u30C3\u30B8\u306E\u30DE\u30FC\u30B8\"
#   build_something:
#     executor: node
#     steps:
#       - checkout
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u4F55\u304B\u3092\u30D3\u30EB\u30C9\"
#   upseart_pullrequest:
#     executor: node
#     steps:
#       - checkout
#       - install_hub:
#           version: \"2.11.1\"
#       - upseart_pullrequest:
#           from: $CIRCLE_BRANCH
#           to: \"develop\"
#       - upseart_pullrequest:
#           from: $CIRCLE_BRANCH
#           to: \"staging\"
#       - upseart_pullrequest:
#           from: $CIRCLE_BRANCH
#           to: \"master\"
#   deploy:
#     executor: node
#     steps:
#       - echo-hello:
#           message: \"[$CIRCLE_BRANCH] \u30C7\u30D7\u30ED\u30A4\"
# 
# workflows:
#   build:
#     jobs:
#       - lint:
#           filters:
#             branches:
#               only: /feature\\/.*/
#       - run_test_light:
#           filters:
#             branches:
#               only: /feature\\/.*/
#           requires:
#             - lint
#       - upseart_pullrequest:
#           filters:
#             branches:
#               only: /feature\\/.*/
#           requires:
#             - lint
#             - run_test_light
#       - run_test:
#           filters:
#             branches:
#               only:
#                 - develop
#                 - staging
#                 - master
#       - merge_coverage_light:
#           filters:
#             branches:
#               only: /feature\\/.*/
#           requires:
#             - run_test_light
#       - merge_coverage:
#           filters:
#             branches:
#               only:
#                 - develop
#                 - staging
#                 - master
#           requires:
#             - run_test
#       - build_something:
#           filters:
#             branches:
#               only:
#                 - develop
#                 - staging
#                 - master
#           requires:
#             - run_test
#       - deploy:
#           filters:
#             branches:
#               only:
#                 - develop
#                 - staging
#                 - master
#           requires:
#             - run_test
#             - merge_coverage
#             - build_something